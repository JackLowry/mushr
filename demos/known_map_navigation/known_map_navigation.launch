<!-- -*- mode: XML -*- -->
<!-- Trajectory Library experiment launch file. -->
<launch>
  <arg name="sim"           default="true" />
  <arg name="sim_machine"   default="flexo" />
  <arg name="map_name"      default="$(find m3pi)/maps/real-floor0.yaml" />
  <arg name="rviz"          default="false" />
  <arg name="control_mode"  default="CM_TL" />
  <arg name="waypoints_csv" default="$(find m3pi)/waypoints/mini-loop.csv" if="$(arg sim)"/>
  <arg name="waypoints_csv" default="$(find m3pi)/waypoints/mini-loop.csv" unless="$(arg sim)"/>
  <arg name="viz"           default="true"/>

  <!-- Controller params -->
  <arg name="mxpi_K"       default="2500"/>
  <arg name="P"            default="70"/>
  <arg name="T"            default="25" if="$(arg sim)"/>
  <arg name="T"            default="17" unless="$(arg sim)"/>
  <arg name="lambda"       default="0.0" if="$(arg sim)"/>
  <arg name="lambda"       default="0.0" unless="$(arg sim)"/>
  <arg name="sigma_v"      default="0.5"/>
  <arg name="sigma_delta"  default="0.35" if="$(arg sim)" />
  <arg name="sigma_delta"  default="0.27" unless="$(arg sim)" />
  <arg name="step_control" default="false"/>

  <machine name="flexo" address="flexo.personalrobotics.cs.washington.edu" default="false" user="michajoh" timeout="1.0" env-loader="/home/michajoh/catkin_ws/src/m3pi/sim-env-loader.sh"/>
  <machine name="wilhelm" address="172.16.77.12" default="true" user="nvidia" timeout="5.0"/>

  <!-- Map server will serve static maps. -->
  <include file="$(find m3pi)/launch/MapServer.launch" >
    <arg name="original_map" value="$(arg map_name)" />
  </include>

  <!-- Simulation will run remotely on flexo. -->
  <include file="$(find m3pi)/launch/EnvironmentSim.launch" if="$(arg sim)">
    <arg name="sim_machine" value="$(arg sim_machine)" />
  </include>

  <!-- Real HW and Sensors, if not in sim. -->
  <include file="$(find racecar)/launch/teleop.launch" unless="$(arg sim)">
    <arg name="racecar_version" default="racecar-v2" />
    <arg name="run_camera" default="true"/>
  </include>

  <!-- Particle filter will perform localization. -->
  <include file="$(find m3pi)/launch/localize.launch" >
    <arg name="max_viz_particles" default="$(arg P)"/>
  </include>

  <!-- MPPI Controller can run MPPI, M3PI and Traj. Libs-->
  <include file="$(find m3pi)/launch/MPPIController.launch" >
    <arg name="control_mode"        default="$(arg control_mode)"/>
    <arg name="waypoints_csv"       default="$(arg waypoints_csv)"/>
    <arg name="looping"             default="false"/>
    <arg name="tl_step_factor"      default="62"/>
    <arg name="fixed_vel"           default="true"/>
    <arg name="desired_speed"       default="0.8"/>
    <arg name="lambda"              default="$(arg lambda)"/>
    <arg name="mxpi_K"              default="$(arg mxpi_K)"/>
    <arg name="P"                   default="$(arg P)"/>
    <arg name="T"                   default="$(arg T)"/>
    <arg name="viz"                 default="$(arg viz)"/>
    <arg name="sigma_v"             default="$(arg sigma_v)"/>
    <arg name="sigma_delta"         default="$(arg sigma_delta)"/>
    <arg name="step_control"        default="$(arg step_control)"/>
  </include>

  <!-- Specifies racecar URDF. -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find racecar_description)/urdf/racecar.xacro'" />
  <node name="rviz" pkg="rviz" type="rviz" if="$(arg rviz)"/>
  
  <include file="$(find m3pi)/launch/MultiPlanner.launch" >
    <arg name="start_csv_file" default="$(eval arg('waypoints_csv').split('.')[0] + '-start.csv')"/>
    <arg name="csv_file" default="$(arg waypoints_csv)"/>
  </include>


  <node pkg="rosbag" type="record" name="recording_node" output="screen"
        args="--all -o /media/JetsonSSD/mini_loop_bags/ -x /mppi/paths" />

</launch>
